trigger: none        
pool:
  vmImage: ubuntu-latest
variables:
- group: crslDev
- group: crslQa
- group: crslWkbnch
- group: chimDev
- group: chimQa
- group: chimProd
- group: psdProd
- group: psdDev
- group: psdQa
- group: emdDev
- group: emdQa
- group: emdCt
- group: kciDev
- group: psdfireDev

stages:
  # - stage: crslDev
  #   displayName: CRSL dev
  #   variables:
  #   - group: crslDev
  #   jobs:
  #     - template: ../templates/steps-to-export-resource-costs.yaml
  #       parameters:
  #         subscriptionId: $(subscriptionId-crslDev)
  #         subscriptionName: $(subscriptionName-crslDev)
  #         applicationShortCode: $(applicationShortCode-crslDev)
  #         environmentCategory: $(environmentCategory-crslDev)        

  - stage: crslQa
    displayName: CRSL QA
    variables:
    - group: crslQa
    jobs:
      - template: ../templates/steps-to-export-resource-costs.yaml
        parameters:
          subscriptionId: $(subscriptionId-crslQa)
          subscriptionName: $(subscriptionName-crslQa)
          locationName: $(locationName-crslQa)
          applicationShortCode: $(applicationShortCode-crslQa)
          environmentCategory: $(environmentCategory-crslQa)

  - stage: crslWkbnch
    displayName: CRSL workbench
    variables:
    - group: crslWkbnch
    dependsOn:
      - crslQa
    jobs:
      - template: ../templates/steps-to-export-resource-costs.yaml
        parameters:
          subscriptionId: $(subscriptionId-crslWkbnch)
          subscriptionName: $(subscriptionName-crslWkbnch)
          applicationShortCode: $(applicationShortCode-crslWkbnch)
          environmentCategory: $(environmentCategory-crslWkbnch)

  - stage: chimDev
    displayName: CHIM dev
    variables:
    - group: chimDev
    dependsOn:
      - crslWkbnch
    jobs:
      - template: ../templates/steps-to-export-resource-costs.yaml
        parameters:
          subscriptionId: $(subscriptionId-chimDev)
          subscriptionName: $(subscriptionName-chimDev)
          locationName: $(locationName-chimDev)
          environmentName: $(environmentName-chimDev)
          applicationCode: $(applicationCode-chimDev)
          applicationShortCode: $(applicationShortCode-chimDev)
          environmentCategory: $(environmentCategory-chimDev)

  - stage: chimQa
    displayName: CHIM QA
    variables:
    - group: chimQa
    dependsOn:
      - chimDev
    jobs:
      - template: ../templates/steps-to-export-resource-costs.yaml
        parameters:
          subscriptionId: $(subscriptionId-chimQa)
          subscriptionName: $(subscriptionName-chimQa)
          locationName: $(locationName-chimQa)
          environmentName: $(environmentName-chimQa)
          applicationCode: $(applicationCode-chimQa)
          applicationShortCode: $(applicationShortCode-chimQa)
          environmentCategory: $(environmentCategory-chimQa)

  - stage: chimProd
    displayName: CHIM Prod
    variables:
    - group: chimProd
    dependsOn:
      - chimQa
    jobs:
      - template: ../templates/steps-to-export-resource-costs.yaml
        parameters:
          subscriptionId: $(subscriptionId-chimProd)
          subscriptionName: $(subscriptionName-chimProd)
          locationName: $(locationName-chimProd)
          environmentName: $(environmentName-chimProd)
          applicationCode: $(applicationCode-chimProd)
          applicationShortCode: $(applicationShortCode-chimProd)
          environmentCategory: $(environmentCategory-chimProd)

  - stage: psdDev
    displayName: PSD dev
    variables:
    - group: psdDev
    dependsOn:
      - crslWkbnch
    jobs:
      - template: ../templates/steps-to-export-resource-costs.yaml
        parameters:
          subscriptionId: $(subscriptionId-psdDev)
          subscriptionName: $(subscriptionName-psdDev)
          locationName: $(locationName-psdDev)
          environmentName: $(environmentName-psdDev)
          applicationCode: $(applicationCode-psdDev)
          applicationShortCode: $(applicationShortCode-psdDev)
          environmentCategory: $(environmentCategory-psdDev)
          
  - stage: psdQa
    displayName: PSD QA
    variables:
    - group: psdQa
    dependsOn:
      - psdDev
    jobs:
      - template: ../templates/steps-to-export-resource-costs.yaml
        parameters:
          subscriptionId: $(subscriptionId-psdQa)
          subscriptionName: $(subscriptionName-psdQa)
          locationName: $(locationName-psdQa)
          environmentName: $(environmentName-psdQa)
          applicationCode: $(applicationCode-psdQa)
          applicationShortCode: $(applicationShortCode-psdQa)
          environmentCategory: $(environmentCategory-psdQa)

  - stage: psdProd
    displayName: PSD Prod
    variables:
    - group: psdProd
    dependsOn:
      - psdQa
    jobs:
      - template: ../templates/steps-to-export-resource-costs.yaml
        parameters:
          subscriptionId: $(subscriptionId-psdProd)
          subscriptionName: $(subscriptionName-psdProd)
          locationName: $(locationName-psdProd)
          environmentName: $(environmentName-psdProd)
          applicationCode: $(applicationCode-psdProd)
          applicationShortCode: $(applicationShortCode-psdProd)
          environmentCategory: $(environmentCategory-psdProd)
  - stage: emdDev
    displayName: EMD dev
    variables:
    - group: emdDev
    dependsOn:
      - crslWkbnch
    jobs:
      - template: ../templates/steps-to-export-resource-costs.yaml
        parameters:
          subscriptionId: $(subscriptionId-emdDev)
          subscriptionName: $(subscriptionName-emdDev)
          locationName: $(locationName-emdDev)
          environmentName: $(environmentName-emdDev)
          applicationCode: $(applicationCode-emdDev)
          applicationShortCode: $(applicationShortCode-emdDev)
          environmentCategory: $(environmentCategory-emdDev)

  - stage: emdQa
    displayName: EMD QA
    variables:
    - group: emdQa
    dependsOn:
      - emdDev
    jobs:
      - template: ../templates/steps-to-export-resource-costs.yaml
        parameters:
          subscriptionId: $(subscriptionId-emdQa)
          subscriptionName: $(subscriptionName-emdQa)
          locationName: $(locationName-emdQa)
          environmentName: $(environmentName-emdQa)
          applicationCode: $(applicationCode-emdQa)
          applicationShortCode: $(applicationShortCode-emdQa)
          environmentCategory: $(environmentCategory-emdQa)

  - stage: emdCt
    displayName: EMD CT
    variables:
    - group: emdCt
    dependsOn:
      - emdDev
    jobs:
      - template: ../templates/steps-to-export-resource-costs.yaml
        parameters:
          subscriptionId: $(subscriptionId-emdCt)
          subscriptionName: $(subscriptionName-emdCt)
          locationName: $(locationName-emdCt)
          environmentName: $(environmentName-emdCt)
          applicationCode: $(applicationCode-emdCt)
          applicationShortCode: $(applicationShortCode-emdCt)
          environmentCategory: $(environmentCategory-emdCt)

  - stage: kciDev
    displayName: KCI dev
    variables:
    - group: kciDev
    dependsOn:
      - crslWkbnch
    jobs:
      - template: ../templates/steps-to-export-resource-costs.yaml
        parameters:
          subscriptionId: $(subscriptionId-kciDev)
          subscriptionName: $(subscriptionName-kciDev)
          locationName: $(locationName-kciDev)
          environmentName: $(environmentName-kciDev)
          applicationCode: $(applicationCode-kciDev)
          applicationShortCode: $(applicationShortCode-kciDev)
          environmentCategory: $(environmentCategory-kciDev)

  - stage: psdfireDev
    displayName: PSDFire Dev
    variables:
    - group: psdfireDev
    dependsOn:
      - crslWkbnch
    jobs:
      - template: ../templates/steps-to-export-resource-costs.yaml
        parameters:
          subscriptionId: $(subscriptionId-psdfireDev)
          subscriptionName: $(subscriptionName-psdfireDev)
          locationName: $(locationName-psdfireDev)
          environmentName: $(environmentName-psdfireDev)
          applicationCode: $(applicationCode-psdfireDev)
          applicationShortCode: $(applicationShortCode-psdfireDev)
          environmentCategory: $(environmentCategory-psdfireDev)


  - stage: mergecsvArtifacts
    displayName: Merge All artifacts into one artifact
    variables:
    - group: crslWkbnch
    dependsOn:
      - crslWkbnch
      - psdfireDev
      - emdCt
      - kciDev
      - psdProd
      - chimProd

    jobs:
      - job: publishMergedArtifact
        displayName: Publish Merged CSV Artifact
        pool:
          vmImage: windows-latest
        steps:
          - checkout: self
            displayName: Checkout repository

          # - task: DownloadPipelineArtifact@2
          #   displayName: Download artifacts
          #   inputs:
          #     source: current
          #     artifact: fileArtifacts-crsl-dev
          #     path: $(Build.SourcesDirectory)

          - task: DownloadPipelineArtifact@2
            displayName: Download artifacts
            inputs:
              source: current
              artifact: fileArtifacts-crsl-qa
              path: $(Build.SourcesDirectory)

          - task: DownloadPipelineArtifact@2
            displayName: Download artifacts
            inputs:
              source: current
              artifact: fileArtifacts-crsl-wkbnch
              path: $(Build.SourcesDirectory)

          - task: DownloadPipelineArtifact@2
            displayName: Download artifacts
            inputs:
              source: current
              artifact: fileArtifacts-chim-dev
              path: $(Build.SourcesDirectory)

          - task: DownloadPipelineArtifact@2
            displayName: Download artifacts
            inputs:
              source: current
              artifact: fileArtifacts-chim-qa
              path: $(Build.SourcesDirectory)

          - task: DownloadPipelineArtifact@2
            displayName: Download artifacts
            inputs:
              source: current
              artifact: fileArtifacts-chim-prod
              path: $(Build.SourcesDirectory)

          - task: DownloadPipelineArtifact@2
            displayName: Download artifacts
            inputs:
              source: current
              artifact: fileArtifacts-emd-dev
              path: $(Build.SourcesDirectory)

          - task: DownloadPipelineArtifact@2
            displayName: Download artifacts
            inputs:
              source: current
              artifact: fileArtifacts-emd-qa
              path: $(Build.SourcesDirectory)

          - task: DownloadPipelineArtifact@2
            displayName: Download artifacts
            inputs:
              source: current
              artifact: fileArtifacts-emd-ct
              path: $(Build.SourcesDirectory)

          - task: DownloadPipelineArtifact@2
            displayName: Download artifacts
            inputs:
              source: current
              artifact: fileArtifacts-psd-dev
              path: $(Build.SourcesDirectory)

          - task: DownloadPipelineArtifact@2
            displayName: Download artifacts
            inputs:
              source: current
              artifact: fileArtifacts-psd-qa
              path: $(Build.SourcesDirectory)

          - task: DownloadPipelineArtifact@2
            displayName: Download artifacts
            inputs:
              source: current
              artifact: fileArtifacts-psdfire-dev
              path: $(Build.SourcesDirectory)

          - task: DownloadPipelineArtifact@2
            displayName: Download artifacts
            inputs:
              source: current
              artifact: fileArtifacts-psd-prod
              path: $(Build.SourcesDirectory)

          - task: DownloadPipelineArtifact@2
            displayName: Download artifacts
            inputs:
              source: current
              artifact: fileArtifacts-kci-dev
              path: $(Build.SourcesDirectory)

          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                Install-Module ImportExcel -Force
                $csvs = get-childItem "$(Build.SourcesDirectory)\ResourceGroupData-*.csv" 
                $result = "$(Build.SourcesDirectory)\ResourceGroupDataOutputFile.csv"
                 [System.IO.File]::WriteAllLines($result,[System.IO.File]::ReadAllLines($csvs[0])[0])
                foreach ($csv in $csvs)  {
                   $lines = [System.IO.File]::ReadAllLines($csv)
                   [System.IO.File]::AppendAllText($result, ($lines[1..$lines.Length] | Out-String))
                }
                Import-CSV $result | Export-Excel -Path resourceCosts.xlsx -WorksheetName ResourceGroup

                $csvs = get-childItem "$(Build.SourcesDirectory)\Summary-*.csv" 
                $result = "$(Build.SourcesDirectory)\summaryDataOutputFile.csv"
                 [System.IO.File]::WriteAllLines($result,[System.IO.File]::ReadAllLines($csvs[0])[0])
                foreach ($csv in $csvs)  {
                   $lines = [System.IO.File]::ReadAllLines($csv)
                   [System.IO.File]::AppendAllText($result, ($lines[1..$lines.Length] | Out-String))
                }
                Import-CSV $result | Export-Excel -Path resourceCosts.xlsx -WorksheetName Summary

                $csvs = get-childItem "$(Build.SourcesDirectory)\DeviceData-*.csv" 
                $result = "$(Build.SourcesDirectory)\DeviceDataOutputFile.csv"
                 [System.IO.File]::WriteAllLines($result,[System.IO.File]::ReadAllLines($csvs[0])[0])
                foreach ($csv in $csvs)  {
                   $lines = [System.IO.File]::ReadAllLines($csv)
                   [System.IO.File]::AppendAllText($result, ($lines[1..$lines.Length] | Out-String))
                }
                Import-CSV $result | Export-Excel -Path resourceCosts.xlsx -WorksheetName DeviceData

                $csvs = get-childItem "$(Build.SourcesDirectory)\SubscriptionResourceGroupData-*.csv" 
                $result = "$(Build.SourcesDirectory)\SubscriptionResourceGroupDataOutputFile.csv"
                 [System.IO.File]::WriteAllLines($result,[System.IO.File]::ReadAllLines($csvs[0])[0])
                foreach ($csv in $csvs)  {
                   $lines = [System.IO.File]::ReadAllLines($csv)
                   [System.IO.File]::AppendAllText($result, ($lines[1..$lines.Length] | Out-String))
                }
                Import-CSV $result | Export-Excel -Path resourceCosts.xlsx -WorksheetName SubscriptionResourceGroupLevel

                $csvs = get-childItem "$(Build.SourcesDirectory)\SubscriptionData-*.csv" 
                $result = "$(Build.SourcesDirectory)\SubscriptionDataOutputFile.csv"
                 [System.IO.File]::WriteAllLines($result,[System.IO.File]::ReadAllLines($csvs[0])[0])
                foreach ($csv in $csvs)  {
                   $lines = [System.IO.File]::ReadAllLines($csv)
                   [System.IO.File]::AppendAllText($result, ($lines[1..$lines.Length] | Out-String))
                }
                Import-CSV $result | Export-Excel -Path resourceCosts.xlsx -WorksheetName SubscriptionData

                

          - task: CopyFiles@2
            displayName: Get Merged CSV Artifact
            inputs:
              contents: |
                resourceCosts.xlsx
              targetFolder: MergedCsvArtifact
              cleanTargetFolder: true

          - publish: MergedCsvArtifact
            artifact: MergedCsvArtifact
            displayName: Publish Merged CSV artifact















